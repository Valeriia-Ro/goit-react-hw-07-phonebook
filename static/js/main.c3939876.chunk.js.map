{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/Container.js","redux/contacts/contacts-actions.js","services/contactApi.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","changeFilter","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","fetchAddToContactsRequest","fetchAddToContactsSuccess","fetchAddToContactsError","fetchDeleteRequest","fetchDeleteSuccess","fetchDeleteError","BASE_URL","fetchContacts","a","axios","get","data","fetchAddContacts","name","number","post","headers","newContact","fetchDeleteContact","id","delete","fetchAllContacts","dispatch","fetchStatus","contacts","alert","getItems","state","items","getFilter","filter","ContactForm","useState","setName","setNumber","useSelector","useDispatch","handleChange","e","currentTarget","value","onSubmit","preventDefault","find","item","fetchAddContactToDb","className","styles","form_section","form_label","type","pattern","title","required","onChange","form_input","form_button","ContactList","useEffect","filtered","contact","toLowerCase","trim","includes","list_section","map","list_element","list_button","onClick","console","log","fetchDelete","connect","onFilter","target","filter_label","filter_input","App","itemsReducer","createReducer","actions","payload","_","filterReducer","isLoadingReducer","errorReducer","contactsReducer","combineReducers","isLoading","error","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3939876.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_section\":\"ContactList_list_section__20Pxf\",\"list_element\":\"ContactList_list_element__3S21O\",\"list_button\":\"ContactList_list_button__xS69r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__i84FK\",\"filter_input\":\"Filter_filter_input__1A4Q6\"};","import React from \"react\";\r\n\r\nconst Container = ({ children }) => <div>{children}</div>;\r\n\r\nexport default Container;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const changeFilter = createAction(\"phonebook/filterContacts\");\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\n\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\nexport const fetchAddToContactsRequest = createAction(\r\n  \"contacts/fetchAddToContactsRequest\"\r\n);\r\nexport const fetchAddToContactsSuccess = createAction(\r\n  \"contacts/fetchAddToContactsSuccess\"\r\n);\r\nexport const fetchAddToContactsError = createAction(\r\n  \"contacts/fetchAddToContactsError\"\r\n);\r\nexport const fetchDeleteRequest = createAction(\"contacts/fetchDeleteRequest\");\r\nexport const fetchDeleteSuccess = createAction(\"contacts/fetchDeleteSuccess\");\r\nexport const fetchDeleteError = createAction(\"contacts/fetchDeleteError\");\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://localhost:3004\";\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(`${BASE_URL}/contacts`);\r\n  return data;\r\n}\r\n\r\nexport async function fetchAddContacts(data) {\r\n  const { name, number } = data;\r\n  const newContact = await axios.post(\r\n    `${BASE_URL}/contacts`,\r\n    {\r\n      name: `${name}`,\r\n      number: `${number}`,\r\n    },\r\n    {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  return newContact;\r\n}\r\n\r\nexport async function fetchDeleteContact(id) {\r\n  await axios.delete(`${BASE_URL}/contacts/${id}`);\r\n}\r\n","import * as fetchStatus from \"./contacts-actions\";\r\nimport {\r\n  fetchContacts,\r\n  fetchAddContacts,\r\n  fetchDeleteContact,\r\n} from \"../../services/contactApi\";\r\n\r\nexport const fetchAllContacts = () => async (dispatch) => {\r\n  dispatch(fetchStatus.fetchContactsRequest());\r\n  try {\r\n    const contacts = await fetchContacts();\r\n    dispatch(fetchStatus.fetchContactsSuccess(contacts));\r\n  } catch (error) {\r\n    alert(\"Something whent wrong...\");\r\n    dispatch(fetchStatus.fetchContactsError(\"Something whent wrong...\"));\r\n  }\r\n};\r\n\r\nexport const fetchAddContactToDb = (data) => async (dispatch) => {\r\n  dispatch(fetchStatus.fetchAddToContactsRequest());\r\n  try {\r\n    await fetchAddContacts(data);\r\n    dispatch(fetchStatus.fetchAddToContactsSuccess());\r\n    dispatch(fetchAllContacts());\r\n  } catch (error) {\r\n    alert(\"Something whent wrong...\");\r\n    dispatch(fetchStatus.fetchAddToContactsError);\r\n  }\r\n};\r\n\r\nexport const fetchDelete = (id) => async (dispatch) => {\r\n  dispatch(fetchStatus.fetchDeleteRequest());\r\n  try {\r\n    await fetchDeleteContact(id);\r\n    dispatch(fetchStatus.fetchDeleteSuccess());\r\n    dispatch(fetchAllContacts());\r\n  } catch (error) {\r\n    console.log(error);\r\n    alert(\"You can not delete the contact\");\r\n    dispatch(fetchStatus.fetchDeleteError());\r\n  }\r\n};\r\n","export const getItems = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n","import { useState } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchAddContactToDb } from \"../../redux/contacts/contacts-operations\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getItems } from \"../../redux/contacts/contacts-selectors\";\r\nimport React from \"react\";\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const state = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const data = e.currentTarget.value;\r\n    switch (e.currentTarget.name) {\r\n      case \"name\":\r\n        setName(data);\r\n        break;\r\n      case \"number\":\r\n        setNumber(data);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = { name, number };\r\n    const repeat = state.find((item) => item.number === data.number);\r\n    if (repeat) {\r\n      alert(`${data.name} is already in contacts`);\r\n      return;\r\n    }\r\n    dispatch(fetchAddContactToDb(data));\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form_section}>\r\n      <label className={styles.form_label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n          className={styles.form_input}\r\n        />\r\n      </label>\r\n      <label className={styles.form_label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n          className={styles.form_input}\r\n        ></input>\r\n      </label>\r\n\r\n      <button type=\"submit\" className={styles.form_button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  fetchAllContacts,\r\n  fetchDelete,\r\n} from \"../../redux/contacts/contacts-operations\";\r\nimport { getItems, getFilter } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getItems);\r\n  const filter = useSelector(getFilter);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAllContacts());\r\n  }, [dispatch]);\r\n  const filtered = contacts.filter((contact) =>\r\n    contact.name.toLowerCase().trim().includes(filter.toLowerCase().trim())\r\n  );\r\n  return (\r\n    <ul className={styles.list_section}>\r\n      {filtered.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.list_element}>\r\n          <span>{name}: </span>\r\n          <span>{number} </span>\r\n          <button\r\n            className={styles.list_button}\r\n            type=\"button\"\r\n            name=\"delete\"\r\n            onClick={() => dispatch(fetchDelete(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\r\n\r\nconst Filter = ({ value, onFilter }) => {\r\n  return (\r\n    <label className={styles.filter_label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={(e) => onFilter(e.target.value)}\r\n        className={styles.filter_input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onFilter: (e) => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\n// import PropTypes from 'prop-types';\nimport Container from \"./Components/Container\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\n\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h1>Contacts</h1>\n      <Filter />\n\n      <ContactList />\n    </Container>\n  );\n}\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"./contacts-actions\";\r\nconst itemsReducer = createReducer([], {\r\n  [actions.fetchContactsSuccess]: (state, { payload }) => [...state, payload],\r\n  [actions.fetchContactsError]: (state, _) => state,\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoadingReducer = createReducer(false, {\r\n  [actions.fetchContactsRequest]: () => true,\r\n  [actions.fetchContactsError]: () => false,\r\n  [actions.fetchContactsSuccess]: () => false,\r\n  [actions.fetchAddToContactsRequest]: () => true,\r\n  [actions.fetchAddToContactsError]: () => false,\r\n  [actions.fetchAddToContactsSuccess]: () => false,\r\n  [actions.fetchDeleteRequest]: () => true,\r\n  [actions.fetchDeleteError]: () => false,\r\n  [actions.fetchDeleteSuccess]: () => false,\r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [actions.fetchContactsError]: (_, { payload }) => payload,\r\n  [actions.fetchContactsRequest]: (_, { payload }) => null,\r\n});\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  isLoading: isLoadingReducer,\r\n  error: errorReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport { contactsReducer } from \"./contacts/contacts-reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_section\":\"ContactForm_form_section__3EdLS\",\"form_label\":\"ContactForm_form_label__ko2vC\",\"form_input\":\"ContactForm_form_input__2XiWC\",\"form_button\":\"ContactForm_form_button__2N_E0\"};"],"sourceRoot":""}